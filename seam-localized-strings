#!/usr/bin/env python3
#
# seam-localized-strings
#
# Syntax:
#
#     seam-localized-strings <separator> <file1> <file2>
#
# Example:
#
#     seam-localized-strings " = " en/Localized.strings wip/Localized.strings > fr/Localized.strings
#
# ## Tracking
#
# * Program: seam-localized-strings
# * Version: 1.1.0
# * License: MIT OR BSD OR GPL-2.0 OR GPL-3.0
# * Created: 2022-11-09T05:12:19Z
# * Updated: 2022-11-11T21:32:51Z
# * Website: https://github.com/sixarm/checkline
# * Contact: Joel Parker Henderson (joel@joelparkerhenderson.com)

import sys
import re

parser = argparse.ArgumentParser(
	prog = 'Seam',
	description = 'Stich together text streams, going line by line',
	epilog = 'License is GPL-2.0-or-later.'
)

parser.add_argument(
	'separator',
	 help='separator string for unstitching and restitching the text streams'
)
parser.add_argument(
	'filename1'
	 help='text file name 1'
)
parser.add_argument(
	'filename2'
	 help='text file name 2'
)

args = parser.parse_args()

separator = args.separator # e.g. " = "
separatorLen = len(separator)

aLines = open(args.filename1, 'r').readlines()
aLen = len(aLines)

bLines = open(args.filename2, 'r').readlines()
bLen = len(bLines)

for i in range(0, max(aLen, bLen)):
	if i < aLen and i < bLen:
		aLine = aLines[i]
		bLine = bLines[i]
		aPos = aLine.find(separator)
		bPos = bLine.find(separator)
		if aPos >= 0 and bPos >= 0:
			print(f"{aLine[:aPos]}{separator}{bLine[(bPos+separatorLen):]}", end = "")
			continue
	if i < aLen:
		print(aLines[i], end = "")
		continue
	if i < bLen:
		print(bLines[i], end = "")
		continue
